<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8"/>
    <title>Admin Panel</title>

    <link
            href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/css/bootstrap.min.css"
            rel="stylesheet"
            integrity="sha384-4bw+/aepP/YC94hEpVNVgiZdgIC5+VKNBQNGCHeKRQN+PtmoHDEXuppvnDJzQIu9"
            crossorigin="anonymous"
    />
    <link
            rel="stylesheet"
            href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css"
    />
    <link href="index.css" rel="stylesheet" type="text/css">
</head>
<body>
<div class="container">
    <div class="background">
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
    </div>

    <header class="d-flex flex-wrap justify-content-center py-3 mb-4 border-bottom">
        <h1 class="multicolortext">Admin Panel</h1>
    </header>


    <form id="task-form" style="margin-top: 2rem;margin-bottom: 2rem;">
        <div class="row g-3 align-items-center">
            <div class="col-auto">
                <input type="text" id="taskTxt" required class="form-control" placeholder="Enter Task..."
                       style="padding-right: 62rem;"/>
            </div>
            <div class="col-auto">
                <button type="submit" class="btn btn-primary">Post Task</button>
            </div>
        </div>

    </form>

    <div class="navbar">
        <div class="container-fluid">
            <span class="navbar-brand mb-0 h1 multicolortext">Current Task:</span>
            <span class="navbar-brand mb-0 p multicolortext" id="current-task"></span>
        </div>
    </div>

    <div id="reveal-container" style="text-align: center; padding-top: 2rem;">
        <button id="reveal-button" class="btn">Reveal Estimates</button>
    </div>

    <div id="usersCards" style="display: flex">

    </div>

    <div class="navbar" id="average" style="display: none; text-align: center; margin-top: 25px;">
        <div class="container-fluid">
            <span class="navbar-brand mb-0 h1 multicolortext" id="averageTxt"> </span>
        </div>
    </div>

</div>

<script src="/socket.io/socket.io.js"></script>

<script>
    const socket = io();

    socket.emit("admin-identify");

    const taskForm = document.getElementById("task-form");
    const taskInput = document.getElementById("taskTxt");
    const revealButton = document.getElementById("reveal-button");
    const average = document.getElementById("average");
    const averageTxt = document.getElementById("averageTxt");
    const currentTaskElement = document.getElementById("current-task");


    let hiddenEstimates = true;

    taskForm.addEventListener("submit", (e) => {
        e.preventDefault();
        const task = taskInput.value;
        currentTaskElement.textContent = task;
        socket.emit("post-task", task);
        taskInput.value = "";
    });

    revealButton.addEventListener("click", () => {
        socket.emit("reveal-estimates");
    });

    socket.on("reveal-estimates", (isHidden) => {
        hiddenEstimates = isHidden;
        if (isHidden) {
            revealButton.textContent = "Reveal Estimates";
        } else {
            revealButton.textContent = "Hide Estimates";
        }
    });

    const updateCards = (users) => {
        usersCards.innerHTML = "";
        for (const socketId in users) {
            let user = users[socketId];
            if (user.estimate == null) {
                usersCards.innerHTML += `
                    <div class="card">
                        <img  class="card-img-top" alt="..." src=${user.avatar}>
                        <div class="card-body">
                            <h4 class="card-title">${user.username}</h4>
                            <h5 id=${user.username} class="card-text">-</h5>
                        </div>
                    </div>`
            } else if (hiddenEstimates) {
                usersCards.innerHTML += `
                    <div class="card">
                        <img class="card-img-top" alt="..." src=${user.avatar}>
                        <div class="card-body">
                            <h4 class="card-title">${user.username}</h4>
                            <h5 id=${user.username} class="card-text">?</h5>
                        </div>
                    </div>`;
            } else {
                usersCards.innerHTML += `
                    <div class="card">
                        <img  class="card-img-top" alt="..." src=${user.avatar}>
                        <div class="card-body">
                            <h4 class="card-title">${user.username}</h4>
                            <h5 id=${user.username} class="card-text">${user.estimate}</h5>
                        </div>
                    </div>`;
            }
        }
    }

    socket.on("load-cards", (users) => {
        updateCards(users);
    })

    socket.on("new-estimate", (user) => {
        let estimate = document.getElementById(user.username);
        if (hiddenEstimates) {
            estimate.innerHTML = `<p id=${user.username} class="card-text">?</p>`;
        } else {
            estimate.innerHTML = `<p id=${user.username} class="card-text">${user.estimate}</p>`;
        }
    });

    const calculateAverage = (users) => {
        let sum = 0;
        let count = 0
        for (user in users) {
            if (users[user].estimate !== null) {
                sum += users[user].estimate;
                count++;
            }
        }
        return sum / count;
    }

    socket.on("reveal-estimates", (estimatesHidden, users) => {
        hiddenEstimates = estimatesHidden;
        updateCards(users);
        if (!estimatesHidden) {
            averageTxt.innerText = "Average: " + calculateAverage(users);
            average.style.display = "block";
        } else
            average.style.display = "none";
    });
</script>
</body>
</html>
